name: Python CI + Release

on:
  push:
    branches: [ "main" ]
    tags:
      - 'v*' # Trigger on version tags like v1.0, v2.1.3
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read # Default needed for checkout

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Run on Python version specified in pyproject.toml
        # Add other versions if needed
        python-version: ["3.10"]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.local/bin" >> $GITHUB_PATH
      shell: bash

    - name: Install dependencies
      run: |
        uv venv # Create virtual environment
        source .venv/bin/activate
        uv pip install -e '.[test]'
        uv pip install ruff pytest hatch # Ensure build tool is available
      shell: bash

    - name: Lint with Ruff
      run: |
        source .venv/bin/activate
        ruff check .
      shell: bash

    - name: Check formatting with Ruff
      run: |
        source .venv/bin/activate
        ruff format . --check
      shell: bash

    - name: Test with pytest
      run: |
        source .venv/bin/activate
        pytest
      shell: bash

  publish:
    name: Publish to PyPI
    needs: [build] # Run only after the build job succeeds
    runs-on: ubuntu-latest
    # Run only on tagged commits
    if: startsWith(github.ref, 'refs/tags/')

    permissions:
      # IMPORTANT: mandatory for trusted publishing
      id-token: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.10" # Use a specific Python version

    - name: Install uv and Hatch
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.local/bin" >> $GITHUB_PATH
        uv venv
        source .venv/bin/activate
        uv pip install hatch
      shell: bash

    - name: Build package
      run: |
        source .venv/bin/activate
        hatch build # Uses hatchling backend specified in pyproject.toml

    - name: Publish package distributions to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      # Trusted publishing automatically uses OIDC, no API token needed 

  build-executables:
    name: Build Executables
    needs: [build]
    if: startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/main'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        include:
          # - os: windows-latest
          #   exe_name: hirebase-mcp-windows
          - os: ubuntu-latest
            exe_name: hirebase-mcp-linux
          # - os: macos-latest
          #   exe_name: hirebase-mcp-macos

    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.local/bin" >> $GITHUB_PATH
        shell: bash

      - name: Install dependencies
        run: |
          uv venv
          source .venv/bin/activate || . .venv/bin/activate || .venv\Scripts\activate
          uv pip install -e '.[dev]'
          uv pip install pyinstaller
        shell: bash

      - name: Create PyInstaller Package
        uses: sayyid5416/pyinstaller@v1
        with:
          spec: src/__init__.py
          python_ver: '3.10'
          options: --onefile, --name ${{ matrix.exe_name }}, --paths=src, --add-data "src:src"
          upload_exe_with_name: ${{ matrix.exe_name }}

  create-release:
    name: Create GitHub Release
    needs: [build-executables]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    permissions:
      contents: write # Needed to create releases
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          files: |
            artifacts/hirebase-mcp-windows/*
            artifacts/hirebase-mcp-linux/*
            artifacts/hirebase-mcp-macos/* 